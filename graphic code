#include <SFML/Graphics.hpp>
#include <iostream>
#include <ctime>

int main() {
    // Create the window
    sf::RenderWindow window(sf::VideoMode(850, 500), "Interactive Weekly Planner");

    // Set up the background color
    sf::Color backgroundColor(211, 211, 211); // Light grey background

    // Define day names
    std::string days[] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
    sf::Color dayColors[] = {
        sf::Color(255, 99, 71),    // Red for Monday
        sf::Color(60, 179, 113),   // Green for Tuesday
        sf::Color(100, 149, 237),  // Blue for Wednesday
        sf::Color(255, 165, 0),    // Orange for Thursday
        sf::Color(255, 255, 0),    // Yellow for Friday
        sf::Color(138, 43, 226),   // Blueviolet for Saturday
        sf::Color(255, 105, 180)   // HotPink for Sunday
    };

    // Set up rectangles for day names and task boxes
    sf::RectangleShape dayRect(sf::Vector2f(105.f, 65.f));   // Rectangle for the day
    sf::RectangleShape taskRect(sf::Vector2f(105.f, 360.f));  // Rectangle for the task input

    // Set up font for the day names
    sf::Font font;
    if (!font.loadFromFile("/System/Library/Fonts/Supplemental/Arial.ttf")) {
        std::cerr << "Error: Failed to load font.\n";
        return -1;
    }

    sf::Text dayText("", font, 18);  // Text to display the day name
    dayText.setFillColor(sf::Color::Black);

    sf::Text taskText("Task:", font, 16); // Text for the task input box
    taskText.setFillColor(sf::Color::Black);

    // Set up the font for the numbers beneath the days
    sf::Text numberText("", font, 16);  // Text to display the day number
    numberText.setFillColor(sf::Color::Black);

    // Get the current date (day of the month)
    std::time_t currentTime = std::time(nullptr);
    std::tm* currentDay = std::localtime(&currentTime);

    // Main rendering loop
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
        }

        // Clear the window with the background color
        window.clear(backgroundColor);

        // Draw the day boxes and task boxes
        for (int i = 0; i < 7; ++i) {
            // Set the color for each day's box
            dayRect.setFillColor(dayColors[i]);

            // Position the day box
            dayRect.setPosition(10.f + i * 115.f, 10.f); // Adjust the spacing to fit all days in the frame
            window.draw(dayRect);

            // Set the day name text
            std::string dayLabel = days[i];

            // Add the day of the month to each day label
            int dayOfMonth = currentDay->tm_mday + (i - currentDay->tm_wday); // Adjust the date based on current day
            dayLabel += "\n" + std::to_string(dayOfMonth);

            dayText.setString(dayLabel);
            dayText.setPosition(10.f + i * 115.f + 10.f, 20.f); // Positioning the text in the center of the day box
            window.draw(dayText);

            // Position the task box below the day box
            taskRect.setFillColor(sf::Color(200, 200, 200));  // Grey task box
            taskRect.setPosition(10.f + i * 115.f, 80.f);
            window.draw(taskRect);

            // Display the "Task:" text in the task box
            taskText.setString("Task:");
            taskText.setPosition(10.f + i * 115.f + 10.f, 90.f); // Position the text inside the task box
            window.draw(taskText);
        }

        // Display the updated window
        window.display();
    }

    return 0;
}
